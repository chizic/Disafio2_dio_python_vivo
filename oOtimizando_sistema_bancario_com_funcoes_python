
def menu():
  menu = """

  [d] Depositar
  [s] Sacar
  [e] Extrato
  [nc] Nova conta
  [nu] Novo usuário
  [q] Sair

  => """
  return input(menu)


def saque(*,saldo,valor, limite,extrato,numero_saques,LIMITE_SAQUES):
  
  excedeu_saldo = valor > saldo

  excedeu_limite = valor > limite

  excedeu_saques = numero_saques >= LIMITE_SAQUES

  if excedeu_saldo:
    print("Operação falhou! Você não tem saldo suficiente.")

  elif excedeu_limite:
    print("Operação falhou! O valor do saque excede o limite.")

  elif excedeu_saques:
    print("Operação falhou! Número máximo de saques excedido.")

  elif valor > 0:
    saldo -= valor
    extrato += f"Saque: R$ {valor:.2f}\n"
    numero_saques += 1
    print('\nsaque realizado com sucesso!')

  else:
    print("Operação falhou! O valor informado é inválido.")

  return saldo,extrato


def deposito(saldo, valor, extrato, /, ):
  valor = float(input("Informe o valor do depósito: "))

  if valor > 0:
    saldo += valor
    extrato += f"Depósito: R$ {valor:.2f}\n"
    print('\ndeposito realizado com sucesso!')

  else:
    print("Operação falhou! O valor informado é inválido.")

  return saldo, extrato

def exibir_extrato(saldo,/,*,extrato):
  print("\n================ EXTRATO ================")
  print("Não foram realizadas movimentações." if not extrato else extrato)
  print(f"\nSaldo: R$ {saldo:.2f}")
  print("==========================================")


def criar_usuario(usuarios):
  #definir usuarios no principal não nesse def
  #usuarios = []
  
  cpf = input('digite apenas os números de seu CPF:')
  usuario = verify_user(cpf, usuarios)

  if usuario:
    print('\nJá existe usuário com esse CPF')
    
  else:
    nome = input('informe seu nome completo:')
    data_nasc = input('informe a data de nascimento (dd/mm/aaaa)')
    endereço = input('informe seu endereço(logradouro, nro - bairro - cidade/sigla estado):')

    usuarios. append({'nome': nome, 'data_nasc': data_nasc, 'cpf': cpf, 'endereço': endereço})
    print('\nUsuário criado com sucesso')

def criar_conta_corrente(agencia, numero_conta, usuarios):
    cpf = input('digite apenas os números de seu CPF:')
    usuario = verify_user(cpf, usuarios)

    if usuario:
      print('\nConta criada com sucesso!')
      return{'agencia': AGENCIA, 'numero_conta': numero_conta, 'usuario': usuario}
    print('\n Falha na operação, usuário não encontrado! ')


def verify_user(cpf, usuarios):
  for usuario in usuarios: 
    if usuario['cpf'] == cpf:
      u = usuario
    else:
       u = None
    return u 



saldo = 0
limite = 500
extrato = ""
numero_saques = 0
LIMITE_SAQUES = 3
AGENCIA = '0001'
usuarios = []
contas = []


while True:

  opcao = menu()
  if opcao == "d":
        saldo, extrato = deposito(saldo, valor, extrato)

  elif opcao == "s":   
    valor = float(input("Informe o valor do saque: "))
  
    saldo, extrato = saque(
          saldo = saldo, 
          limite = limite,
          extrato = extrato,
          numero_saques = numero_saques,
          LIMITE_SAQUES = LIMITE_SAQUES,
          valor = valor,
      )

  elif opcao == "e":
      exibir_extrato(saldo, extrato = extrato)

  elif opcao == "nu":
    criar_usuario(usuarios)

  elif opcao == "nc":
    numero_conta = len(contas)+1
    conta = criar_conta_corrente(AGENCIA, numero_conta, usuarios)

    if conta:
      contas.append(conta)

  elif opcao == "q":
      break

  else:
      print("Operação inválida, por favor selecione novamente a operação desejada.")







